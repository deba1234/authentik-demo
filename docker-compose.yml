---
version: '3.2'

services:

  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      - "--api"
      - "--log.level=DEBUG"
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=deba.pokus@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy:stable
    # ports:
    #    - 8000:9000
    #    - 8443:9443
    # expose:
    #   - "9000"
    environment:
      AUTHENTIK_HOST: https://auth.solution-space.org
      AUTHENTIK_INSECURE: "false"
      AUTHENTIK_TOKEN: CnbnGjLYYVMtTGuiOEBAvlyrr1vOymkIRuxe9WBHXAah4h348tA9ONJQ1QfKSm0bmwNM4WNoadXiu50mKG5mh13VuZeqYN1r8Siug3ztBfh8T08vl3wSWclc9jrjZqAA
      # Starting with 2021.9, you can optionally set this too
      # when authentik_host for internal communication doesn't match the public URL
      AUTHENTIK_HOST_BROWSER: https://auth.solution-space.org
    labels:
      traefik.enable: true
      traefik.port: 9000
      traefik.http.routers.authentik.rule: Host(`https://solution-space.org/`) && PathPrefix(`/akprox/`)
      # `authentik-proxy` refers to the service name in the compose file.
      traefik.http.middlewares.authentik.forwardauth.address: http://authentik-proxy:9000/akprox/auth/traefik
      traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    restart: unless-stopped


  whoami_domain:
    image: "traefik/whoami"
    container_name: "simple-service-main-authentik"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami_domain.rule=Host(`solution-space.org`)"
      - "traefik.http.routers.whoami_domain.entrypoints=websecure"
      - "traefik.http.routers.whoami_domain.tls.certresolver=myresolver"
      - "traefik.http.routers.whoami_domain.middlewares=authentik@docker"

  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
    env_file:
      - .env

  redis:
    image: redis:alpine
    restart: unless-stopped

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.1.2}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_PORT_HTTP: 80
      AUTHENTIK_PORT_HTTPS: 443
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # WORKERS: 2
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env
    ports:
      - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`auth.solution-space.org`)"
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.routers.server.tls.certresolver=myresolver"

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.1.2}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    # This is optional, and can be removed. If you remove this, the following will happen
    # - The permissions for the /backups and /media folders aren't fixed, so make sure they are 1000:1000
    # - The docker socket can't be accessed anymore
    user: root
    volumes:
      - ./backups:/backups
      - ./media:/media
      - ./certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock
      - ./custom-templates:/templates
      - geoip:/geoip
    env_file:
      - .env
  # geoipupdate:
  #   image: "maxmindinc/geoipupdate:latest"
  #   volumes:
  #     - "geoip:/usr/share/GeoIP"
  #   environment:
  #     GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
  #     GEOIPUPDATE_FREQUENCY: "8"
  #   env_file:
  #     - .env

volumes:
  database:
    driver: local
  geoip:
    driver: local
